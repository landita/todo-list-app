{
  "env": {
    "browser": true,
    "es2021": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
    "prettier"
  ],
  "overrides": [],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": ["./tsconfig.json"]
  },
  "settings": {
    "import/resolver": {
      "typescript": {}
    }
  },
  "plugins": ["react", "react-hooks", "@typescript-eslint", "prettier"],
  "rules": {
    "no-console": "warn",
    "no-unused-vars": "warn",
    "no-duplicate-imports": "warn",
    "no-empty": "off",
    "react/react-in-jsx-scope": "off",
    "@typescript-eslint/ban-types": "off",
    "@typescript-eslint/ban-ts-comment": "off",
    "@typescript-eslint/no-non-null-assertion": "off",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "default",
        "format": ["PascalCase", "camelCase", "UPPER_CASE", "snake_case"]
      },
      {
        "selector": "variable",
        "types": ["boolean"],
        "format": ["PascalCase", "camelCase", "UPPER_CASE"],
        "prefix": ["is", "should", "has", "can", "did", "will"]
      },
      {
        "selector": ["property", "function", "parameter"],
        "format": ["PascalCase", "camelCase", "UPPER_CASE", "snake_case"]
      },
      {
        "selector": "typeLike",
        "format": ["PascalCase"]
      }
    ]
  }
}
